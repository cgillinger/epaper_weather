#!/usr/bin/env python3
"""
Precipitation Module Renderer - LAYOUT F√ñRB√ÑTTRAD f√∂r b√§ttre l√§sbarhet
Optimerad f√∂r snabba beslut om regnkl√§der utan on√∂diga tips

Ansvarar f√∂r rendering av nederb√∂rd-modul med:
- Tydlig status (REGNAR NU / REGN V√ÑNTAT)
- Intensitet (L√ÑTT/M√ÖTTLIGT/KRAFTIGT) 
- Timing (startar XX:XX)
- F√ñRB√ÑTTRAD LAYOUT: B√§ttre spacing och centrering
"""

from typing import Dict, List
from .base_renderer import ModuleRenderer

class PrecipitationRenderer(ModuleRenderer):
    """
    Renderer f√∂r nederb√∂rd-modul - LAYOUT F√ñRB√ÑTTRAD
    
    Fokus p√• snabb avl√§sning med f√∂rb√§ttrad layout:
    - STOR status-text f√∂r snabb identifiering
    - Tydlig intensitet ist√§llet f√∂r mm/h-v√§rden
    - Korrekt timing utan dubblering
    - F√ñRB√ÑTTRAD: Mer luft mellan rader f√∂r E-Paper
    - F√ñRB√ÑTTRAD: B√§ttre varningsikon-centrering
    """
    
    def render(self, x: int, y: int, width: int, height: int, 
               weather_data: Dict, context_data: Dict) -> bool:
        """
        Rendera nederb√∂rd-modul f√∂r snabb avl√§sning med f√∂rb√§ttrad layout
        
        F√∂rb√§ttrad layout:
        ‚ö†Ô∏è   REGNAR NU          eller    ‚ö†Ô∏è   REGN V√ÑNTAT  
             L√§tt intensitet             M√•ttligt - startar 13:00
        (mer luft mellan raderna)
        """
        try:
            self.logger.info(f"üåßÔ∏è Renderar layout-f√∂rb√§ttrad nederb√∂rd-modul ({width}√ó{height})")
            
            # H√§mta nederb√∂rd-data med s√§ker fallback
            precipitation = self.safe_get_value(context_data, 'precipitation', 0.0, float)
            forecast_2h = self.safe_get_value(context_data, 'forecast_precipitation_2h', 0.0, float)
            cycling_weather = self.safe_get_value(weather_data, 'cycling_weather', {}, dict)
            
            # Best√§m huvudstatus och layout
            main_status, detail_text = self._determine_improved_status(
                precipitation, forecast_2h, cycling_weather
            )
            
            # === F√ñRB√ÑTTRAD LAYOUT RENDERING ===
            
            # 1. Varningsikon (F√ñRB√ÑTTRAD centrering)
            icon_success = self._render_warning_icon_centered(x, y)
            
            # 2. HUVUDSTATUS (stort, tydligt)
            text_start_x = x + 65 if icon_success else x + 20  # Lite mer plats efter ikon
            self._render_main_status_large(text_start_x, y, width - (text_start_x - x), main_status)
            
            # 3. DETALJER (F√ñRB√ÑTTRAT: mer luft mellan raderna)
            self._render_details_spaced(x, y, width, detail_text)
            
            self.logger.info(f"‚úÖ Layout-f√∂rb√§ttrad nederb√∂rd-modul rendered: {main_status}")
            return True
            
        except Exception as e:
            self.logger.error(f"‚ùå Fel vid nederb√∂rd rendering: {e}")
            return self.render_fallback_content(x, y, width, height, 
                                               "Nederb√∂rd-data ej tillg√§nglig")
    
    def _determine_improved_status(self, precipitation: float, forecast_2h: float, 
                                 cycling_weather: Dict) -> tuple:
        """
        F√ñRB√ÑTTRAD status-logik f√∂r snabb avl√§sning
        
        Returns:
            Tuple (main_status, detail_text)
        """
        try:
            # P√•g√•ende nederb√∂rd - prioritet 1
            if precipitation > 0:
                main_status = "REGNAR NU"
                intensity = self._get_intensity_level(precipitation)
                detail_text = f"{intensity} intensitet"
                
            # Prognostiserad nederb√∂rd - prioritet 2  
            elif forecast_2h > 0:
                main_status = "REGN V√ÑNTAT"
                intensity = self._get_intensity_level(forecast_2h)
                
                # Timing fr√•n cykel-v√§der analys
                forecast_time = cycling_weather.get('forecast_time', 'snart')
                detail_text = f"{intensity} - startar {forecast_time}"
                
            # Fallback (borde inte h√§nda d√• trigger inte skulle vara aktiv)
            else:
                main_status = "NEDERB√ñRD DETEKTERAD"
                detail_text = "Kontrollerar data..."
            
            return main_status, detail_text
            
        except Exception as e:
            self.logger.warning(f"‚ö†Ô∏è Fel vid f√∂rb√§ttrad status-best√§mning: {e}")
            return "NEDERB√ñRD-INFO", "Data ej tillg√§nglig"
    
    def _get_intensity_level(self, mm_per_hour: float) -> str:
        """
        Konvertera mm/h till TYDLIGA intensitetsniv√•er f√∂r snabb avl√§sning
        Fokus p√• stora skillnader ist√§llet f√∂r mm/h-v√§rden
        """
        if mm_per_hour < 0.1:
            return "INGET"
        elif mm_per_hour < 0.5:
            return "DUGGREGN"
        elif mm_per_hour < 1.0:
            return "L√ÑTT"
        elif mm_per_hour < 2.5:
            return "M√ÖTTLIG"
        elif mm_per_hour < 10.0:
            return "KRAFTIG"
        else:
            return "MYCKET KRAFTIG"
    
    def _render_warning_icon_centered(self, x: int, y: int) -> bool:
        """
        F√ñRB√ÑTTRAD: Rendera varningsikon med b√§ttre centrering
        """
        try:
            # Justerad position f√∂r b√§ttre centrering inom modulomr√•det
            return self.draw_text_with_fallback(
                (x + 18, y + 18),  # Lite mer centrat (var x+15, y+15)
                "‚ö†Ô∏è", 
                self.fonts.get('medium_main', self.fonts.get('small_main')), 
                fill=0
            )
            
        except Exception as e:
            self.logger.warning(f"‚ö†Ô∏è Varningsikon fel: {e}")
            return self.draw_text_with_fallback(
                (x + 18, y + 18), 
                "!", 
                self.fonts.get('medium_main', self.fonts.get('small_main')), 
                fill=0
            )
    
    def _render_main_status_large(self, x: int, y: int, max_width: int, main_status: str) -> bool:
        """
        F√ñRB√ÑTTRAD: Rendera huvudstatus med STOR, tydlig text
        """
        try:
            # Anv√§nd st√∂rre font f√∂r snabb igenk√§nning
            return self.draw_text_with_fallback(
                (x, y + 20), 
                main_status, 
                self.fonts.get('small_main', self.fonts.get('medium_desc')),  # St√∂rre font
                fill=0,
                max_width=max_width
            )
            
        except Exception as e:
            self.logger.warning(f"‚ö†Ô∏è Huvudstatus rendering fel: {e}")
            return False
    
    def _render_details_spaced(self, x: int, y: int, width: int, detail_text: str) -> bool:
        """
        F√ñRB√ÑTTRAD: Rendera intensitet + timing med mer luft mellan raderna
        """
        try:
            # F√ñRB√ÑTTRING: √ñkat fr√•n y+50 till y+65 f√∂r mer luft mellan raderna
            return self.draw_text_with_fallback(
                (x + 65, y + 65),  # Var: y+50, nu: y+65 (15px mer luft)
                detail_text, 
                self.fonts.get('medium_desc', self.fonts.get('small_desc')),
                fill=0,
                max_width=width - 85  # Justerat f√∂r ny x-position
            )
            
        except Exception as e:
            self.logger.warning(f"‚ö†Ô∏è Detaljer rendering fel: {e}")
            return False
    
    def get_required_data_sources(self) -> List[str]:
        """
        Nederb√∂rd-modul beh√∂ver SMHI prognosdata och cykel-v√§der analys
        """
        return ['smhi', 'cycling_weather', 'forecast']
    
    def get_module_info(self) -> Dict:
        """Metadata f√∂r nederb√∂rd-modul - LAYOUT F√ñRB√ÑTTRAD VERSION"""
        info = super().get_module_info()
        info.update({
            'purpose': 'Snabb nederb√∂rd-avl√§sning f√∂r regnkl√§der-beslut',
            'triggers': ['precipitation > 0', 'forecast_precipitation_2h > 0.2'],
            'layout_priority': 'Ers√§tter bottom_section vid nederb√∂rd',
            'improvements': [
                'St√∂rre, tydligare text f√∂r snabb avl√§sning',
                'Inga mm/h-v√§rden (ersatta med intensitetsniv√•er)', 
                'Fixad dubblering av "regn regn"',
                'Kompakt layout utan handlingsrekommendationer',
                'F√∂rb√§ttrade fontstorlekar f√∂r timing',
                'NYTT: F√∂rb√§ttrat radavst√•nd (15px mer luft)',
                'NYTT: B√§ttre varningsikon-centrering',
                'NYTT: Optimerad f√∂r E-Paper l√§sbarhet'
            ]
        })
        return info