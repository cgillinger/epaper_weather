#!/bin/bash
echo "üïê FIXAR TIMEZONE-VISNING I CYKEL-V√ÑDER"
echo "======================================="

echo ""
echo "üêõ PROBLEMET:"
echo "SMHI returnerar UTC-tider men visar dem som lokala tider"
echo "19:00 UTC = 21:00 CEST (svensk sommartid)"
echo "Anv√§ndaren ser '19:00' men det betyder faktiskt '21:00' lokal tid"
echo ""

echo "üí° L√ñSNINGEN:"
echo "Konvertera SMHI UTC-tider till lokal tid innan visning"
echo "warning_forecast_time.strftime('%H:%M') ‚Üí lokaltid"
echo ""

echo "üîí BACKUP weather_client.py:"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
BACKUP_DIR="backup/timezone_fix_$TIMESTAMP"
mkdir -p "$BACKUP_DIR"
cp modules/weather_client.py "$BACKUP_DIR/"
echo "‚úÖ Backup: $BACKUP_DIR/weather_client.py"
echo ""

echo "üéØ F√ñRKLARAD BUGG:"
echo "Med nuvarande visning:"
echo "  Sk√§rm visar: 'startar 19:00'"  
echo "  Anv√§ndaren: 'Det √§r 19:41, varf√∂r 19:00?'"
echo "  Realitet: '19:00 UTC = 21:00 svensk tid'"
echo ""

echo "Efter fix:"
echo "  Sk√§rm visar: 'startar 21:00'"
echo "  Anv√§ndaren: 'Ah, regn v√§ntat om 1h 19min'"
echo ""

echo "üîß √ÑNDRING BEH√ñVS I modules/weather_client.py:"
echo "I analyze_cycling_weather() funktionen, runt rad ~400:"
echo ""
echo "FR√ÖN:"
echo "cycling_analysis['forecast_time'] = warning_forecast_time.strftime('%H:%M')"
echo ""
echo "TILL:"
echo "# Konvertera UTC till lokal tid f√∂r visning"
echo "local_time = warning_forecast_time.astimezone()"
echo "cycling_analysis['forecast_time'] = local_time.strftime('%H:%M')"
echo ""

echo "üéØ Detta f√∂rklarar ocks√• varf√∂r systemet 'inte r√§ttade sig':"
echo "Systemet FUNGERAR korrekt - det prognostiserar regn 21:00 lokal tid"
echo "Men visar fel tid (19:00 UTC ist√§llet f√∂r 21:00 lokal)"
